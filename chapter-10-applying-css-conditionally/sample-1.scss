// Media Query Syntax: The Basics
@media screen,
print {
    .media-query-basics {
        color: red;
        font-size: 20px;
    }
}


@media screen and (width: 500px) {
    nav li {
        display: inline;
        font-size: 30px;
    }
}


// Range Media Features and min- and max- Prefixes
@media (max-width: 500px) {
    .min-max-width {
        color: blue;
        font-size: 30px;
    }
}


@media (min-width: 450px) and (max-width: 700px) {
    .min-max-width-swith {
        color: green;
        font-size: 30px;
    }
}


// Discrete Media Features
@media screen and (orientation: portrait) {
    .discrete-media-par-1 {
        color: purple;
        font-size: 30px;
    }
}

@media screen and (orientation: portrait) {
    .discrete-media-par-2 {
        color: gray;
        font-size: 40px;
    }
}

/*
@media screen and ( hover: on-demand ) {
    input[type=checkbox] + label {
        padding: 15em;
    }
}
*/

@media screen and (hover: none) and (pointer:coarse) {
    input[type=checkbox]+label {
        padding: 15em;
    }
}


//

//--------------------

// Sample
.animation {
    animation: pulse 1s linear infinite both;
    background: lightblue;
    padding: 10px;
    width: 100px;
    text-align: center;
    border-radius: 10px;
}

/* Tone down the animation to avoid vestibular motion triggers like scaling or panning large objects. */
@media (prefers-reduced-motion: no-prefence) {
    .animation {
        animation-name: dissolve;
    }
}

//--------------------

.wiggle {
    margin-top: 10px;
    background: lightgreen;
    border-radius: 10px;
    width: 100px;
    padding: 20px;
    text-align: center;
    animation: wiggling 3s ease-in infinite forwards alternate;
}

/*
@media screen and ( prefers-reduced-motion ) {
    .wiggle {
        animation-play-state: paused;
    }
}
*/


// @media screen and not ( prefers-reduced-motion ) also works
@media screen and (prefers-reduced-motion: no-preference) {
    .wiggle {
        animation-play-state: wiggling 3s ease-in infinite forwards alternate running;
    }
}


// prefers-color-scheme
@media ( prefers-color-scheme: dark ) {
    /* Styles here */
}

/* Styles when there's no preference */
:root {
    --background: #ccc;
    --foreground: #333;
    --button-bg: #505;
    --button-fg: #eee;
    --link: #909;
    --visited: #606;
}

/* Update colors for the background, foreground, and buttons */
@media  screen and ( prefers-color-scheme: light ) {
    :root {
        --background: #fff;
        --foreground: #000;
        --button-bg: #c0c;
        --button-fg: #fff;
    }
}

@media screen and ( prefers-color-scheme: dark ) {
    :root {
        --background: #222;
        --foreground: #eee;
        --button-bg: #808;
        --button-fg: #fff;
        --link: #f0f;
        --visited: #30f;
    }
}

// Nesting @media Rules
@media screen {
    @media ( min-width: 320px ){
        .media-rules {
            color: gray;
            font-size: 10px;
        }
    }
    @media ( min-width: 640px ) {
        .media-rules {
            color: yellow;
            font-size: 15px;
        }
    }
}

// Working around Legacy Browser Support with only
@media only screen and ( min-resolution: 2dppx ) {
    /* Styles go here */
}

// Negating Media Queries
@media not screen and ( min-width: 650px ) {
    .negating {
        color: purple;
    }
}


// Other Ways to Use Media Queries


// Using Media Queries with JavaScript

// Error Checking with not all








